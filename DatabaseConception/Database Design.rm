Conception :

Users:
. UserID (Primary Key)
. Username
. Password (hashed)
. Email
. UserType (Student, Instructor, Admin, etc.)

Courses:
. CourseID (Primary Key)
. CourseName
. Description
. InstructorID (Foreign Key referencing Users)
. StartDate
. EndDate
. Price
. Rating

Enrollments:
. EnrollmentID (Primary Key)
. UserID (Foreign Key referencing Users)
. CourseID (Foreign Key referencing Courses)
. EnrollmentDate
. CompletionStatus (e.g., In Progress, Completed)

Instructors:
. InstructorID (Primary Key, Foreign Key referencing Users)
. Bio
. Expertise

Modules:
. ModuleID (Primary Key)
. CourseID (Foreign Key referencing Courses)
. ModuleName
. Description
. OrderIndex (to determine the sequence of modules within a course)

Lessons:
. LessonID (Primary Key)
. ModuleID (Foreign Key referencing Modules)
. LessonName
. Content
. VideoURL
. OrderIndex (to determine the sequence of lessons within a module)
 
UserProgress:
. ProgressID (Primary Key)
. UserID (Foreign Key referencing Users)
. LessonID (Foreign Key referencing Lessons)
. ProgressStatus (e.g., Not Started, In Progress, Completed)
. LastAccessed (timestamp)



---------SQL

-- Users Table
CREATE TABLE Users (
    UserID INT PRIMARY KEY,
    Username VARCHAR(255),
    Password VARCHAR(255),
    Email VARCHAR(255),
    UserType VARCHAR(50)
);

-- Courses Table
CREATE TABLE Courses (
    CourseID INT PRIMARY KEY,
    CourseName VARCHAR(255),
    Description TEXT,
    InstructorID INT,
    StartDate DATE,
    EndDate DATE,
    Price DECIMAL(10, 2),
    Rating FLOAT,
    FOREIGN KEY (InstructorID) REFERENCES Users(UserID)
);

-- Enrollments Table
CREATE TABLE Enrollments (
    EnrollmentID INT PRIMARY KEY,
    UserID INT,
    CourseID INT,
    EnrollmentDate DATE,
    CompletionStatus VARCHAR(50),
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);

-- Instructors Table
CREATE TABLE Instructors (
    InstructorID INT PRIMARY KEY,
    Bio TEXT,
    Expertise VARCHAR(255),
    FOREIGN KEY (InstructorID) REFERENCES Users(UserID)
);

-- Modules Table
CREATE TABLE Modules (
    ModuleID INT PRIMARY KEY,
    CourseID INT,
    ModuleName VARCHAR(255),
    Description TEXT,
    OrderIndex INT,
    FOREIGN KEY (CourseID) REFERENCES Courses(CourseID)
);

-- Lessons Table
CREATE TABLE Lessons (
    LessonID INT PRIMARY KEY,
    ModuleID INT,
    LessonName VARCHAR(255),
    Content TEXT,
    VideoURL VARCHAR(255),
    OrderIndex INT,
    FOREIGN KEY (ModuleID) REFERENCES Modules(ModuleID)
);

-- UserProgress Table
CREATE TABLE UserProgress (
    ProgressID INT PRIMARY KEY,
    UserID INT,
    LessonID INT,
    ProgressStatus VARCHAR(50),
    LastAccessed TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (LessonID) REFERENCES Lessons(LessonID)
);





---------- MongoDB

// Users Collection
db.createCollection("Users");
db.Users.insert({
    UserID: 1,
    Username: "exampleUser",
    Password: "hashedPassword",
    Email: "user@example.com",
    UserType: "Student"
});

// Courses Collection
db.createCollection("Courses");
db.Courses.insert({
    CourseID: 1,
    CourseName: "Example Course",
    Description: "Course description",
    InstructorID: 2,
    StartDate: ISODate("2024-01-10"),
    EndDate: ISODate("2024-02-10"),
    Price: 19.99,
    Rating: 4.5
});

// Enrollments Collection
db.createCollection("Enrollments");
db.Enrollments.insert({
    EnrollmentID: 1,
    UserID: 1,
    CourseID: 1,
    EnrollmentDate: ISODate("2024-01-15"),
    CompletionStatus: "In Progress"
});

// Instructors Collection
db.createCollection("Instructors");
db.Instructors.insert({
    InstructorID: 2,
    Bio: "Instructor bio",
    Expertise: "Subject expertise"
});

// Modules Collection
db.createCollection("Modules");
db.Modules.insert({
    ModuleID: 1,
    CourseID: 1,
    ModuleName: "Module 1",
    Description: "Module description",
    OrderIndex: 1
});

// Lessons Collection
db.createCollection("Lessons");
db.Lessons.insert({
    LessonID: 1,
    ModuleID: 1,
    LessonName: "Lesson 1",
    Content: "Lesson content",
    VideoURL: "https://example.com/video1",
    OrderIndex: 1
});

// UserProgress Collection
db.createCollection("UserProgress");
db.UserProgress.insert({
    ProgressID: 1,
    UserID: 1,
    LessonID: 1,
    ProgressStatus: "In Progress",
    LastAccessed: ISODate("2024-01-16T08:00:00Z")
});
